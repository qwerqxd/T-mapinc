rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Secures user profiles, ensuring only the owner can read and write their own data.
     * @path /databases/{database}/documents/users/{userId}
     * @allow (read, write) - User with UID 'user123' can read/write document 'user123'.
     * @deny (read, write) - User with UID 'user456' cannot read/write document 'user123'.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false; // No listing of users.
      allow create: if isSignedIn() && isOwner(userId) && request.auth.uid == userId;
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }

    /**
     * @description Allows public read access to markers, but restricts creation, update, and deletion to authenticated users.
     * @path /databases/{database}/documents/markers/{markerId}
     * @allow (read) - Any user can read marker data.
     * @allow (create) - Authenticated user can create a marker.
     * @deny (create) - Unauthenticated user cannot create a marker.
     * @deny (update, delete) - Only the owner of a marker can update or delete it.
     * @principle Allows public read access with owner-only writes for markers.
     */
    match /markers/{markerId} {
        function isSignedIn() {
            return request.auth != null;
        }

        allow get, list: if true;
        allow create: if isSignedIn();
        allow update: if false; // Updating markers is disallowed in this prototype.
        allow delete: if false; // Deleting markers is disallowed in this prototype.
    }

    /**
     * @description Secures reviews, ensuring only the author can manage them.
     * @path /databases/{database}/documents/reviews/{reviewId}
     * @allow (read) - Any user can read a review.
     * @allow (create, update, delete) - Only the author of the review can create, update, or delete it.
     * @deny (create, update, delete) - Another user cannot modify or delete someone else's review.
     * @principle Enforces document ownership for reviews.
     */
    match /reviews/{reviewId} {
        function isSignedIn() {
            return request.auth != null;
        }

        function isOwner() {
            return request.resource.data.authorId == request.auth.uid;
        }

        allow get, list: if true;
        allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
        allow update: if isSignedIn() && isOwner();
        allow delete: if isSignedIn() && isOwner();
    }
  }
}